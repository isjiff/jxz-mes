{"remainingRequest":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\views\\index.vue?vue&type=style&index=0&id=a83bd3b0&lang=scss&scoped=true&","dependencies":[{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\views\\index.vue","mtime":1662109326000},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":1662432869776},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1662432875697},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1662432871503},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1662432868783},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662432868786},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1662432874590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kYXNoYm9hcmQtZWRpdG9yLWNvbnRhaW5lciB7CiAgcGFkZGluZzogMzJweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQwLCAyNDIsIDI0NSk7CiAgcG9zaXRpb246IHJlbGF0aXZlOwoKICAuY2hhcnQtd3JhcHBlciB7CiAgICBiYWNrZ3JvdW5kOiAjZmZmOwogICAgcGFkZGluZzogMTZweCAxNnB4IDA7CiAgICBtYXJnaW4tYm90dG9tOiAzMnB4OwogIH0KfQoKQG1lZGlhIChtYXgtd2lkdGg6MTAyNHB4KSB7CiAgLmNoYXJ0LXdyYXBwZXIgewogICAgcGFkZGluZzogOHB4OwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"dashboard-editor-container\">\n\n    <panel-group @handleSetLineChartData=\"handleSetLineChartData\" />\n\n    <el-row :gutter=\"32\" style=\"padding:16px 16px 0;margin-bottom:32px;\">\n        <el-card>\n            <div slot=\"header\" class=\"clearfix\">\n                <span>生产进度</span>\n            </div>\n            <el-table\n                v-loading=\"loading\"\n                :data=\"workorderList\"\n                row-key=\"workorderId\"\n                default-expand-all\n                :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\"\n                >\n                <el-table-column label=\"工单编码\" width=\"180\" prop=\"workorderCode\" >\n                    <template slot-scope=\"scope\">\n                    <el-button\n                        size=\"mini\"\n                        type=\"text\"\n                        @click=\"handleView(scope.row)\"\n                        v-hasPermi=\"['mes:pro:workorder:query']\"\n                    >{{scope.row.workorderCode}}</el-button>\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"订单编号\" width=\"140\" align=\"center\" prop=\"sourceCode\" />            \n                <el-table-column label=\"客户名称\" align=\"center\" prop=\"clientName\" :show-overflow-tooltip=\"true\"/>\n                <el-table-column label=\"产品编号\" width=\"120\" align=\"center\" prop=\"productCode\" />\n                <el-table-column label=\"产品名称\" width=\"250px\" align=\"center\" prop=\"productName\" :show-overflow-tooltip=\"true\"/>\n                <el-table-column label=\"规格型号\" align=\"center\" prop=\"productSpc\" :show-overflow-tooltip=\"true\"/>\n                <el-table-column label=\"单位\" align=\"center\" prop=\"unitOfMeasure\" />\n                <el-table-column label=\"生产进度\" align=\"center\" width=\"200px\" >\n                    <template slot-scope=\"scope\">\n                        <el-progress :text-inside=\"true\" :stroke-width=\"20\" :percentage=\"scope.row.quantityProduced/scope.row.quantity*100\"></el-progress>\n                    </template>\n                </el-table-column>            \n                <el-table-column label=\"需求日期\" align=\"center\" prop=\"requestDate\" width=\"180\">\n                    <template slot-scope=\"scope\">\n                    <span>{{ parseTime(scope.row.requestDate, '{y}-{m}-{d}') }}</span>\n                    </template>\n                </el-table-column>         \n            </el-table>\n        </el-card>\n    </el-row>\n    \n    <el-row style=\"background:#fff;padding:16px 16px 0; margin-bottom:32px;\">\n      <line-chart :chart-data=\"lineChartData\" />\n    </el-row>\n\n    <el-row :gutter=\"32\">\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\n        <div class=\"chart-wrapper\">\n          <raddar-chart />\n        </div>\n      </el-col>\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\n        <div class=\"chart-wrapper\">\n          <pie-chart />\n        </div>\n      </el-col>\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"8\">\n        <div class=\"chart-wrapper\">\n          <bar-chart />\n        </div>\n      </el-col>\n    </el-row>\n\n    \n  </div>\n</template>\n\n<script>\nimport { listWorkorder } from \"@/api/mes/pro/workorder\";\nimport PanelGroup from './dashboard/PanelGroup'\nimport LineChart from './dashboard/LineChart'\nimport RaddarChart from './dashboard/RaddarChart'\nimport PieChart from './dashboard/PieChart'\nimport BarChart from './dashboard/BarChart'\n\nconst lineChartData = {\n  newVisitis: {\n    expectedData: [100, 120, 161, 134, 105, 160, 165],\n    actualData: [120, 82, 91, 154, 162, 140, 145]\n  },\n  messages: {\n    expectedData: [200, 192, 120, 144, 160, 130, 140],\n    actualData: [180, 160, 151, 106, 145, 150, 130]\n  },\n  purchases: {\n    expectedData: [80, 100, 121, 104, 105, 90, 100],\n    actualData: [120, 90, 100, 138, 142, 130, 130]\n  },\n  shoppings: {\n    expectedData: [130, 140, 141, 142, 145, 150, 160],\n    actualData: [120, 82, 91, 154, 162, 140, 130]\n  }\n}\n\nexport default {\n  name: 'Index',\n  components: {\n    PanelGroup,\n    LineChart,\n    RaddarChart,\n    PieChart,\n    BarChart\n  },\n  data() {\n    return {\n        loading: true,\n        queryParams: {},\n        workorderList: [],\n        lineChartData: lineChartData.newVisitis\n    }\n  },\n  created(){\n      this.getList();\n  },\n  methods: {\n    getList() {\n      this.loading = true;\n      listWorkorder(this.queryParams).then(response => {\n        this.workorderList = response.data;\n        this.loading = false;\n      });\n    },\n    handleSetLineChartData(type) {\n      this.lineChartData = lineChartData[type]\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard-editor-container {\n  padding: 32px;\n  background-color: rgb(240, 242, 245);\n  position: relative;\n\n  .chart-wrapper {\n    background: #fff;\n    padding: 16px 16px 0;\n    margin-bottom: 32px;\n  }\n}\n\n@media (max-width:1024px) {\n  .chart-wrapper {\n    padding: 8px;\n  }\n}\n</style>\n"]}]}