{"remainingRequest":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\views\\mes\\qc\\qctemplate\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\views\\mes\\qc\\qctemplate\\index.vue","mtime":1665505269000},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662432868786},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1662432871518},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662432868786},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1662432874590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGxpc3RRY3RlbXBsYXRlLCBnZXRRY3RlbXBsYXRlLCBkZWxRY3RlbXBsYXRlLCBhZGRRY3RlbXBsYXRlLCB1cGRhdGVRY3RlbXBsYXRlIH0gZnJvbSAiQC9hcGkvbWVzL3FjL3FjdGVtcGxhdGUiOwppbXBvcnQge2dlbkNvZGV9IGZyb20gIkAvYXBpL3N5c3RlbS9hdXRvY29kZS9ydWxlIgppbXBvcnQgVGVtcGxhdGVJbmRleCBmcm9tICIuL3RlbXBsYXRlaW5kZXgudnVlIgppbXBvcnQgVGVtcGxhdGVQcm9kdWN0IGZyb20gIi4vdGVtcGxhdGVwcm9kdWN0IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJRY3RlbXBsYXRlIiwKICBkaWN0czogWydzeXNfeWVzX25vJywnbWVzX3FjX3R5cGUnXSwKICBjb21wb25lbnRzOiB7VGVtcGxhdGVJbmRleCxUZW1wbGF0ZVByb2R1Y3R9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICAvL+iHquWKqOeUn+aIkOe8lueggQogICAgICBhdXRvR2VuRmxhZzpmYWxzZSwKICAgICAgb3B0VHlwZTogdW5kZWZpbmVkLAogICAgICAvLyDpga7nvanlsYIKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgLy8g6YCJ5Lit5pWw57uECiAgICAgIGlkczogW10sCiAgICAgIC8vIOmdnuWNleS4quemgeeUqAogICAgICBzaW5nbGU6IHRydWUsCiAgICAgIC8vIOmdnuWkmuS4quemgeeUqAogICAgICBtdWx0aXBsZTogdHJ1ZSwKICAgICAgLy8g5pi+56S65pCc57Si5p2h5Lu2CiAgICAgIHNob3dTZWFyY2g6IHRydWUsCiAgICAgIC8vIOaAu+adoeaVsAogICAgICB0b3RhbDogMCwKICAgICAgLy8g5qOA5rWL5qih5p2/6KGo5qC85pWw5o2uCiAgICAgIHFjdGVtcGxhdGVMaXN0OiBbXSwKICAgICAgLy8g5by55Ye65bGC5qCH6aKYCiAgICAgIHRpdGxlOiAiIiwKICAgICAgLy8g5piv5ZCm5pi+56S65by55Ye65bGCCiAgICAgIG9wZW46IGZhbHNlLAogICAgICAvLyDmn6Xor6Llj4LmlbAKICAgICAgcXVlcnlQYXJhbXM6IHsKICAgICAgICBwYWdlTnVtOiAxLAogICAgICAgIHBhZ2VTaXplOiAxMCwKICAgICAgICB0ZW1wbGF0ZUNvZGU6IG51bGwsCiAgICAgICAgdGVtcGxhdGVOYW1lOiBudWxsLAogICAgICAgIGl0ZW1Db2RlOm51bGwsCiAgICAgICAgaXRlbU5hbWU6bnVsbCwKICAgICAgICBxY1R5cGVzUGFyYW06IFtdLAogICAgICAgIGVuYWJsZUZsYWc6IG51bGwsCiAgICAgIH0sCiAgICAgIC8vIOihqOWNleWPguaVsAogICAgICBmb3JtOiB7CiAgICAgIH0sCiAgICAgIC8vIOihqOWNleagoemqjAogICAgICBydWxlczogewogICAgICAgIHRlbXBsYXRlQ29kZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuajgOa1i+aooeadv+e8luWPt+S4jeiDveS4uuepuiIsIHRyaWdnZXI6ICJibHVyIiB9CiAgICAgICAgXSwKICAgICAgICB0ZW1wbGF0ZU5hbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLmo4DmtYvmqKHmnb/lkI3np7DkuI3og73kuLrnqboiLCB0cmlnZ2VyOiAiYmx1ciIgfQogICAgICAgIF0sCiAgICAgICAgcWNUeXBlczogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuajgOa1i+enjeexu+S4jeiDveS4uuepuiIsIHRyaWdnZXI6ICJibHVyIiB9CiAgICAgICAgXSwKICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldExpc3QoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKiDmn6Xor6Lmo4DmtYvmqKHmnb/liJfooaggKi8KICAgIGdldExpc3QoKSB7CiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgIGxpc3RRY3RlbXBsYXRlKHRoaXMucXVlcnlQYXJhbXMpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIHRoaXMucWN0ZW1wbGF0ZUxpc3QgPSByZXNwb25zZS5yb3dzOwogICAgICAgIHRoaXMudG90YWwgPSByZXNwb25zZS50b3RhbDsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g5Y+W5raI5oyJ6ZKuCiAgICBjYW5jZWwoKSB7CiAgICAgIHRoaXMub3BlbiA9IGZhbHNlOwogICAgICB0aGlzLnJlc2V0KCk7CiAgICB9LAogICAgLy8g6KGo5Y2V6YeN572uCiAgICByZXNldCgpIHsKICAgICAgdGhpcy5mb3JtID0gewogICAgICAgIHRlbXBsYXRlSWQ6IG51bGwsCiAgICAgICAgdGVtcGxhdGVDb2RlOiBudWxsLAogICAgICAgIHRlbXBsYXRlTmFtZTogbnVsbCwKICAgICAgICBxY1R5cGVzUGFyYW06IFtdLAogICAgICAgIGVuYWJsZUZsYWc6ICdZJywKICAgICAgICByZW1hcms6IG51bGwsCiAgICAgICAgY3JlYXRlQnk6IG51bGwsCiAgICAgICAgY3JlYXRlVGltZTogbnVsbCwKICAgICAgICB1cGRhdGVCeTogbnVsbCwKICAgICAgICB1cGRhdGVUaW1lOiBudWxsCiAgICAgIH07CiAgICAgIHRoaXMuYXV0b0dlbkZsYWcgPSBmYWxzZTsKICAgICAgdGhpcy5yZXNldEZvcm0oImZvcm0iKTsKICAgIH0sCiAgICAvKiog5pCc57Si5oyJ6ZKu5pON5L2cICovCiAgICBoYW5kbGVRdWVyeSgpIHsKICAgICAgdGhpcy5xdWVyeVBhcmFtcy5wYWdlTnVtID0gMTsKICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICB9LAogICAgLyoqIOmHjee9ruaMiemSruaTjeS9nCAqLwogICAgcmVzZXRRdWVyeSgpIHsKICAgICAgdGhpcy5yZXNldEZvcm0oInF1ZXJ5Rm9ybSIpOwogICAgICB0aGlzLmhhbmRsZVF1ZXJ5KCk7CiAgICB9LAogICAgLy8g5aSa6YCJ5qGG6YCJ5Lit5pWw5o2uCiAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2Uoc2VsZWN0aW9uKSB7CiAgICAgIHRoaXMuaWRzID0gc2VsZWN0aW9uLm1hcChpdGVtID0+IGl0ZW0udGVtcGxhdGVJZCkKICAgICAgdGhpcy5zaW5nbGUgPSBzZWxlY3Rpb24ubGVuZ3RoIT09MQogICAgICB0aGlzLm11bHRpcGxlID0gIXNlbGVjdGlvbi5sZW5ndGgKICAgIH0sCiAgICAvKiog5paw5aKe5oyJ6ZKu5pON5L2cICovCiAgICBoYW5kbGVBZGQoKSB7CiAgICAgIHRoaXMucmVzZXQoKTsKICAgICAgdGhpcy5vcGVuID0gdHJ1ZTsKICAgICAgdGhpcy50aXRsZSA9ICLmt7vliqDmo4DmtYvmqKHmnb8iOwogICAgICB0aGlzLm9wdFR5cGUgPSAiYWRkIjsKICAgIH0sCiAgICAvLyDmn6Xor6LmmI7nu4bmjInpkq7mk43kvZwKICAgIGhhbmRsZVZpZXcocm93KXsKICAgICAgdGhpcy5yZXNldCgpOwogICAgICBjb25zdCB0ZW1wbGF0ZUlkID0gcm93LnRlbXBsYXRlSWQgfHwgdGhpcy5pZHM7CiAgICAgIGdldFFjdGVtcGxhdGUodGVtcGxhdGVJZCkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgdGhpcy5mb3JtID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICB0aGlzLm9wZW4gPSB0cnVlOwogICAgICAgIHRoaXMudGl0bGUgPSAi5p+l55yL5qOA5rWL5qih5p2/5L+h5oGvIjsKICAgICAgICB0aGlzLm9wdFR5cGUgPSAidmlldyI7CiAgICAgIH0pOwogICAgfSwKICAgIC8qKiDkv67mlLnmjInpkq7mk43kvZwgKi8KICAgIGhhbmRsZVVwZGF0ZShyb3cpIHsKICAgICAgdGhpcy5yZXNldCgpOwogICAgICBjb25zdCB0ZW1wbGF0ZUlkID0gcm93LnRlbXBsYXRlSWQgfHwgdGhpcy5pZHMKICAgICAgZ2V0UWN0ZW1wbGF0ZSh0ZW1wbGF0ZUlkKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBkZWJ1Z2dlcjsKICAgICAgICB0aGlzLmZvcm0gPSByZXNwb25zZS5kYXRhOwogICAgICAgIHRoaXMub3BlbiA9IHRydWU7CiAgICAgICAgdGhpcy50aXRsZSA9ICLkv67mlLnmo4DmtYvmqKHmnb8iOwogICAgICAgIHRoaXMub3B0VHlwZSA9ICJlZGl0IjsKICAgICAgfSk7CiAgICB9LAogICAgLyoqIOaPkOS6pOaMiemSriAqLwogICAgc3VibWl0Rm9ybSgpIHsKICAgICAgdGhpcy4kcmVmc1siZm9ybSJdLnZhbGlkYXRlKHZhbGlkID0+IHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIGlmICh0aGlzLmZvcm0udGVtcGxhdGVJZCAhPSBudWxsKSB7CiAgICAgICAgICAgIHVwZGF0ZVFjdGVtcGxhdGUodGhpcy5mb3JtKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICB0aGlzLiRtb2RhbC5tc2dTdWNjZXNzKCLkv67mlLnmiJDlip8iKTsKICAgICAgICAgICAgICB0aGlzLm9wZW4gPSBmYWxzZTsKICAgICAgICAgICAgICB0aGlzLmdldExpc3QoKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBhZGRRY3RlbXBsYXRlKHRoaXMuZm9ybSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgdGhpcy4kbW9kYWwubXNnU3VjY2Vzcygi5paw5aKe5oiQ5YqfIik7CiAgICAgICAgICAgICAgdGhpcy5vcGVuID0gZmFsc2U7CiAgICAgICAgICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLyoqIOWIoOmZpOaMiemSruaTjeS9nCAqLwogICAgaGFuZGxlRGVsZXRlKHJvdykgewogICAgICBjb25zdCB0ZW1wbGF0ZUlkcyA9IHJvdy50ZW1wbGF0ZUlkIHx8IHRoaXMuaWRzOwogICAgICB0aGlzLiRtb2RhbC5jb25maXJtKCfmmK/lkKbnoa7orqTliKDpmaTmo4DmtYvmqKHmnb/nvJblj7fkuLoiJyArIHRlbXBsYXRlSWRzICsgJyLnmoTmlbDmja7pobnvvJ8nKS50aGVuKGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiBkZWxRY3RlbXBsYXRlKHRlbXBsYXRlSWRzKTsKICAgICAgfSkudGhlbigoKSA9PiB7CiAgICAgICAgdGhpcy5nZXRMaXN0KCk7CiAgICAgICAgdGhpcy4kbW9kYWwubXNnU3VjY2Vzcygi5Yig6Zmk5oiQ5YqfIik7CiAgICAgIH0pLmNhdGNoKCgpID0+IHt9KTsKICAgIH0sCiAgICAvL+iHquWKqOeUn+aIkOe8lueggQogICAgaGFuZGxlQXV0b0dlbkNoYW5nZShhdXRvR2VuRmxhZyl7CiAgICAgIGlmKGF1dG9HZW5GbGFnKXsKICAgICAgICBnZW5Db2RlKCdRQ19URU1QTEFURV9DT0RFJykudGhlbihyZXNwb25zZSA9PnsKICAgICAgICAgIHRoaXMuZm9ybS50ZW1wbGF0ZUNvZGUgPSByZXNwb25zZTsKICAgICAgICB9KTsKICAgICAgfWVsc2V7CiAgICAgICAgdGhpcy5mb3JtLnRlbXBsYXRlQ29kZSA9IG51bGw7CiAgICAgIH0KICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/mes/qc/qctemplate","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"queryParams\" ref=\"queryForm\" size=\"small\" :inline=\"true\" v-show=\"showSearch\" label-width=\"100px\">\n      <el-form-item label=\"检测模板编号\" prop=\"templateCode\">\n        <el-input\n          v-model=\"queryParams.templateCode\"\n          placeholder=\"请输入检测模板编号\"\n          clearable\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"检测模板名称\" prop=\"templateName\">\n        <el-input\n          v-model=\"queryParams.templateName\"\n          placeholder=\"请输入检测模板名称\"\n          clearable\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"产品编码\" prop=\"itemCode\">\n        <el-input\n          v-model=\"queryParams.itemCode\"\n          placeholder=\"请输入产品名称\"\n          clearable\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"产品名称\" prop=\"itemName\">\n        <el-input\n          v-model=\"queryParams.itemName\"\n          placeholder=\"请输入产品名称\"\n          clearable\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"检测种类\" prop=\"qcTypesParam\">\n          <el-checkbox-group v-model=\"queryParams.qcTypesParam\">\n            <el-checkbox v-for=\"dict in dict.type.mes_qc_type\"\n                  :key=\"dict.value\"\n                  :label=\"dict.value\"\n                  :value=\"dict.value\">{{dict.label}}</el-checkbox>\n          </el-checkbox-group>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          plain\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['mes:qc:qctemplate:add']\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          plain\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['mes:qc:qctemplate:edit']\"\n        >修改</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          plain\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n          v-hasPermi=\"['mes:qc:qctemplate:remove']\"\n        >删除</el-button>\n      </el-col>\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n    </el-row>\n\n    <el-table v-loading=\"loading\" :data=\"qctemplateList\" @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"检测模板编号\" align=\"center\" prop=\"templateCode\" >\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"text\"\n            @click=\"handleView(scope.row)\"\n            v-hasPermi=\"['mes:qc:template:query']\"\n          >{{scope.row.templateCode}}</el-button>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"检测模板名称\" align=\"center\" prop=\"templateName\" />\n      <el-table-column label=\"检测种类\" align=\"center\" prop=\"qcTypesParam\" >\n        <template slot-scope=\"scope\">\n          <dict-tag :options=\"dict.type.mes_qc_type\" :value=\"scope.row.qcTypesParam\"/>                   \n        </template>\n      </el-table-column>\n      <el-table-column label=\"是否启用\" align=\"center\" prop=\"enableFlag\">\n        <template slot-scope=\"scope\">\n          <dict-tag :options=\"dict.type.sys_yes_no\" :value=\"scope.row.enableFlag\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"handleUpdate(scope.row)\"\n            v-hasPermi=\"['mes:qc:qctemplate:edit']\"\n          >修改</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n            v-hasPermi=\"['mes:qc:qctemplate:remove']\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    \n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改检测模板对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"960px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\n        <el-row>\n          <el-col :span=\"8\">\n            <el-form-item label=\"模板编号\" prop=\"templateCode\">\n              <el-input v-model=\"form.templateCode\" placeholder=\"请输入模板编号\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"4\">\n            <el-form-item  label-width=\"80\">\n              <el-switch v-model=\"autoGenFlag\"\n                  active-color=\"#13ce66\"\n                  active-text=\"自动生成\"\n                  @change=\"handleAutoGenChange(autoGenFlag)\" v-if=\"optType != 'view'\">               \n              </el-switch>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"模板名称\" prop=\"templateName\">\n              <el-input v-model=\"form.templateName\" placeholder=\"请输入模板名称\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"18\">\n            <el-form-item label=\"检测种类\" prop=\"qcTypesParam\">          \n              <el-checkbox-group v-model=\"form.qcTypesParam\">\n                <el-checkbox v-for=\"dict in dict.type.mes_qc_type\"\n                      :key=\"dict.value\"\n                      :label=\"dict.value\"\n                      :value=\"dict.value\">{{dict.label}}</el-checkbox>\n              </el-checkbox-group>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"6\">\n            <el-form-item label=\"是否启用\" prop=\"enableFlag\">\n              <el-radio-group v-model=\"form.enableFlag\" disabled v-if=\"optType=='view'\">\n                <el-radio\n                  v-for=\"dict in dict.type.sys_yes_no\"\n                  :key=\"dict.value\"\n                  :label=\"dict.value\"\n                >{{dict.label}}</el-radio>\n              </el-radio-group>\n              <el-radio-group v-model=\"form.enableFlag\" v-else>\n                <el-radio\n                  v-for=\"dict in dict.type.sys_yes_no\"\n                  :key=\"dict.value\"\n                  :label=\"dict.value\"\n                >{{dict.label}}</el-radio>\n              </el-radio-group>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-tabs type=\"border-card\" v-if=\"form.templateId != null\">\n        <el-tab-pane label=\"检测项\">\n          <TemplateIndex ref=\"indexTab\" :templateId=\"form.templateId\" :optType=\"optType\"></TemplateIndex>\n        </el-tab-pane>\n        <el-tab-pane label=\"物料产品\">\n          <TemplateProduct ref=\"productTab\" :templateId=\"form.templateId\" :optType=\"optType\"></TemplateProduct>\n        </el-tab-pane>\n      </el-tabs>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"cancel\" v-if=\"optType =='view'\">返回</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\" v-else>确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listQctemplate, getQctemplate, delQctemplate, addQctemplate, updateQctemplate } from \"@/api/mes/qc/qctemplate\";\nimport {genCode} from \"@/api/system/autocode/rule\"\nimport TemplateIndex from \"./templateindex.vue\"\nimport TemplateProduct from \"./templateproduct\";\nexport default {\n  name: \"Qctemplate\",\n  dicts: ['sys_yes_no','mes_qc_type'],\n  components: {TemplateIndex,TemplateProduct},\n  data() {\n    return {\n      //自动生成编码\n      autoGenFlag:false,\n      optType: undefined,\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 检测模板表格数据\n      qctemplateList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        templateCode: null,\n        templateName: null,\n        itemCode:null,\n        itemName:null,\n        qcTypesParam: [],\n        enableFlag: null,\n      },\n      // 表单参数\n      form: {\n      },\n      // 表单校验\n      rules: {\n        templateCode: [\n          { required: true, message: \"检测模板编号不能为空\", trigger: \"blur\" }\n        ],\n        templateName: [\n          { required: true, message: \"检测模板名称不能为空\", trigger: \"blur\" }\n        ],\n        qcTypes: [\n          { required: true, message: \"检测种类不能为空\", trigger: \"blur\" }\n        ],\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询检测模板列表 */\n    getList() {\n      this.loading = true;\n      listQctemplate(this.queryParams).then(response => {\n        this.qctemplateList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        templateId: null,\n        templateCode: null,\n        templateName: null,\n        qcTypesParam: [],\n        enableFlag: 'Y',\n        remark: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null\n      };\n      this.autoGenFlag = false;\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.templateId)\n      this.single = selection.length!==1\n      this.multiple = !selection.length\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加检测模板\";\n      this.optType = \"add\";\n    },\n    // 查询明细按钮操作\n    handleView(row){\n      this.reset();\n      const templateId = row.templateId || this.ids;\n      getQctemplate(templateId).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.title = \"查看检测模板信息\";\n        this.optType = \"view\";\n      });\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const templateId = row.templateId || this.ids\n      getQctemplate(templateId).then(response => {\n        debugger;\n        this.form = response.data;\n        this.open = true;\n        this.title = \"修改检测模板\";\n        this.optType = \"edit\";\n      });\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.templateId != null) {\n            updateQctemplate(this.form).then(response => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            addQctemplate(this.form).then(response => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const templateIds = row.templateId || this.ids;\n      this.$modal.confirm('是否确认删除检测模板编号为\"' + templateIds + '\"的数据项？').then(function() {\n        return delQctemplate(templateIds);\n      }).then(() => {\n        this.getList();\n        this.$modal.msgSuccess(\"删除成功\");\n      }).catch(() => {});\n    },\n    //自动生成编码\n    handleAutoGenChange(autoGenFlag){\n      if(autoGenFlag){\n        genCode('QC_TEMPLATE_CODE').then(response =>{\n          this.form.templateCode = response;\n        });\n      }else{\n        this.form.templateCode = null;\n      }\n    }\n  }\n};\n</script>\n"]}]}