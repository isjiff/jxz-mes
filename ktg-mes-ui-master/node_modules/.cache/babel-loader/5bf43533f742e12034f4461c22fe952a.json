{"remainingRequest":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\babel-loader\\lib\\index.js!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\views\\mes\\tm\\tooltype\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\views\\mes\\tm\\tooltype\\index.vue","mtime":1662109326000},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\babel.config.js","mtime":1662109326000},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662432868786},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1662432871518},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662432868786},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1662432874590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;;;;AAyNA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eACA;EACAA,gBADA;EAEAC,yCAFA;EAGAC,IAHA,kBAGA;IACA;MACA;MACAC,kBAFA;MAGAC,kBAHA;MAIA;MACAC,aALA;MAMA;MACAC,OAPA;MAQA;MACAC,YATA;MAUA;MACAC,cAXA;MAYA;MACAC,gBAbA;MAcA;MACAC,QAfA;MAgBA;MACAC,gBAjBA;MAkBA;MACAC,SAnBA;MAoBA;MACAC,WArBA;MAsBA;MACAC;QACAC,UADA;QAEAC,YAFA;QAGAC,kBAHA;QAIAC,kBAJA;QAKAC,cALA;QAMAC,iBANA;QAOAC;MAPA,CAvBA;MAgCA;MACAC,QAjCA;MAkCA;MACAC;QACAN,eACA;UAAAO;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAR,eACA;UAAAM;UAAAC;UAAAC;QAAA,CADA,CAJA;QAOAP,WACA;UAAAK;UAAAC;UAAAC;QAAA,CADA;MAPA;IAnCA;EA+CA,CAnDA;EAoDAC,OApDA,qBAoDA;IACA;EACA,CAtDA;EAuDAC;IACA;IACAC,OAFA,qBAEA;MAAA;;MACA;MACA;QACA;QACA;QACA;MACA,CAJA;IAKA,CATA;IAUA;IACAC,MAXA,oBAWA;MACA;MACA;IACA,CAdA;IAeA;IACAC,KAhBA,mBAgBA;MACA;QACAC,gBADA;QAEAf,kBAFA;QAGAC,kBAHA;QAIAC,aAJA;QAKAC,iBALA;QAMAC,mBANA;QAOAY,YAPA;QAQAC,cARA;QASAC,gBATA;QAUAC,cAVA;QAWAC;MAXA;MAaA;MACA;IACA,CAhCA;;IAiCA;IACAC,WAlCA,yBAkCA;MACA;MACA;IACA,CArCA;;IAsCA;IACAC,UAvCA,wBAuCA;MACA;MACA;IACA,CA1CA;IA2CA;IACAC,qBA5CA,iCA4CAC,SA5CA,EA4CA;MACA;QAAA;MAAA;MACA;MACA;IACA,CAhDA;;IAiDA;IACAC,SAlDA,uBAkDA;MACA;MACA;MACA;MACA;IACA,CAvDA;IAwDA;IACAC,UAzDA,sBAyDAC,GAzDA,EAyDA;MAAA;;MACA;MACA;MACA;QACA;QACA;QACA;QACA;MACA,CALA;IAMA,CAlEA;;IAmEA;IACAC,YApEA,wBAoEAD,GApEA,EAoEA;MAAA;;MACA;MACA;MACA;QACA;QACA;QACA;QACA;MACA,CALA;IAMA,CA7EA;;IA8EA;IACAE,UA/EA,wBA+EA;MAAA;;MACA;QACA;UACA;YACA;cACA;;cACA;;cACA;YACA,CAJA;UAKA,CANA,MAMA;YACA;cACA;;cACA;;cACA;YACA,CAJA;UAKA;QACA;MACA,CAhBA;IAiBA,CAjGA;;IAkGA;IACAC,YAnGA,wBAmGAH,GAnGA,EAmGA;MAAA;;MACA;MACA;QACA;MACA,CAFA,EAEAI,IAFA,CAEA;QACA;;QACA;MACA,CALA,EAKAC,KALA,CAKA,cALA;IAMA,CA3GA;;IA4GA;IACAC,YA7GA,0BA6GA;MACA,wEACA,gBADA,sBAEA,oBAFA;IAGA,CAjHA;IAkHA;IACAC,mBAnHA,+BAmHAhD,WAnHA,EAmHA;MAAA;;MACA;QACA;UACA;QACA,CAFA;MAGA,CAJA,MAIA;QACA;MACA;IACA;EA3HA;AAvDA,C","names":["name","dicts","data","autoGenFlag","optType","loading","ids","single","multiple","showSearch","total","tooltypeList","title","open","queryParams","pageNum","pageSize","toolTypeCode","toolTypeName","codeFlag","maintenType","maintenPeriod","form","rules","required","message","trigger","created","methods","getList","cancel","reset","toolTypeId","remark","createBy","createTime","updateBy","updateTime","handleQuery","resetQuery","handleSelectionChange","selection","handleAdd","handleView","row","handleUpdate","submitForm","handleDelete","then","catch","handleExport","handleAutoGenChange"],"sourceRoot":"src/views/mes/tm/tooltype","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"queryParams\" ref=\"queryForm\" size=\"small\" :inline=\"true\" v-show=\"showSearch\" label-width=\"100px\">\n      <el-form-item label=\"类型编码\" prop=\"toolTypeCode\">\n        <el-input\n          v-model=\"queryParams.toolTypeCode\"\n          placeholder=\"请输入类型编码\"\n          clearable\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"类型名称\" prop=\"toolTypeName\">\n        <el-input\n          v-model=\"queryParams.toolTypeName\"\n          placeholder=\"请输入类型名称\"\n          clearable\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"保养维护类型\" prop=\"maintenType\">\n        <el-select v-model=\"queryParams.maintenType\" placeholder=\"请选择保养维护类型\" clearable>\n          <el-option\n            v-for=\"dict in dict.type.mes_mainten_type\"\n            :key=\"dict.value\"\n            :label=\"dict.label\"\n            :value=\"dict.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          plain\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['mes:tm:tooltype:add']\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          plain\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['mes:tm:tooltype:edit']\"\n        >修改</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          plain\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n          v-hasPermi=\"['mes:tm:tooltype:remove']\"\n        >删除</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"warning\"\n          plain\n          icon=\"el-icon-download\"\n          size=\"mini\"\n          @click=\"handleExport\"\n          v-hasPermi=\"['mes:tm:tooltype:export']\"\n        >导出</el-button>\n      </el-col>\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n    </el-row>\n\n    <el-table v-loading=\"loading\" :data=\"tooltypeList\" @selection-change=\"handleSelectionChange\">      \n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"类型编码\" align=\"center\" prop=\"toolTypeCode\" >\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"text\"\n            @click=\"handleView(scope.row)\"\n            v-hasPermi=\"['mes:tm:tooltype:query']\"\n          >{{scope.row.toolTypeCode}}</el-button>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"类型名称\" align=\"center\" prop=\"toolTypeName\" :show-overflow-tooltip=\"true\"/>\n      <el-table-column label=\"是否编码管理\" align=\"center\" prop=\"codeFlag\">\n        <template slot-scope=\"scope\">\n          <dict-tag :options=\"dict.type.sys_yes_no\" :value=\"scope.row.codeFlag\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"保养维护类型\" align=\"center\" prop=\"maintenType\">\n        <template slot-scope=\"scope\">\n          <dict-tag v-if=\"scope.row.codeFlag =='Y'\" :options=\"dict.type.mes_mainten_type\" :value=\"scope.row.maintenType\"/>\n          <span v-else>{{ \"无\"  }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"保养周期\" align=\"center\" prop=\"maintenPeriod\" >\n        <template slot-scope=\"scope\">\n          <span v-if=\"scope.row.codeFlag =='Y' && scope.row.maintenType =='REGULAR'\">{{ scope.row.maintenPeriod +\"天\"  }}</span>\n          <span v-else-if=\"scope.row.codeFlag =='Y' && scope.row.maintenType =='USAGE'\">{{ scope.row.maintenPeriod +\"次\"  }}</span>\n          <span v-else>{{ \"无\"  }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"备注\" align=\"center\" prop=\"remark\" :show-overflow-tooltip=\"true\"/>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"handleUpdate(scope.row)\"\n            v-hasPermi=\"['mes:tm:tooltype:edit']\"\n          >修改</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n            v-hasPermi=\"['mes:tm:tooltype:remove']\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    \n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改工装夹具类型对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"960px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"120px\">\n        <el-row>\n          <el-col :span=\"8\">\n            <el-form-item label=\"类型编码\" prop=\"toolTypeCode\">\n              <el-input v-model=\"form.toolTypeCode\" placeholder=\"请输入类型编码\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"4\">\n            <el-switch v-model=\"autoGenFlag\"\n                active-color=\"#13ce66\"\n                active-text=\"自动生成\"\n                @change=\"handleAutoGenChange(autoGenFlag)\" v-if=\"optType != 'view'\">               \n            </el-switch>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"类型名称\" prop=\"toolTypeName\">\n              <el-input v-model=\"form.toolTypeName\" placeholder=\"请输入类型名称\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"8\">\n            <el-form-item label=\"是否编码管理\" prop=\"codeFlag\">\n              <el-radio-group v-model=\"form.codeFlag\" disabled v-if=\"optType=='view'\">\n                    <el-radio\n                      v-for=\"dict in dict.type.sys_yes_no\"\n                      :key=\"dict.value\"\n                      :label=\"dict.value\"\n                    >{{dict.label}}</el-radio>\n                  </el-radio-group>\n                  <el-radio-group v-model=\"form.codeFlag\" v-else>\n                    <el-radio\n                      v-for=\"dict in dict.type.sys_yes_no\"\n                      :key=\"dict.value\"\n                      :label=\"dict.value\"\n                    >{{dict.label}}</el-radio>\n                </el-radio-group>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"8\" v-if=\"form.codeFlag=='Y'\">\n            <el-form-item label=\"保养维护类型\" prop=\"maintenType\">\n              <el-select v-model=\"form.maintenType\" placeholder=\"请选择保养维护类型\">\n                <el-option\n                  v-for=\"dict in dict.type.mes_mainten_type\"\n                  :key=\"dict.value\"\n                  :label=\"dict.label\"\n                  :value=\"dict.value\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"8\" v-if=\"form.codeFlag=='Y'\">\n            <el-form-item label=\"保养周期\" prop=\"maintenPeriod\">\n              <el-input v-model=\"form.maintenPeriod\" placeholder=\"请输入保养周期\" />\n            </el-form-item>\n          </el-col>\n        </el-row>        \n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-col>          \n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"cancel\" v-if=\"optType =='view'\">返回</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\" v-else>确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listTooltype, getTooltype, delTooltype, addTooltype, updateTooltype } from \"@/api/mes/tm/tooltype\";\nimport {genCode} from \"@/api/system/autocode/rule\"\nexport default {\n  name: \"Tooltype\",\n  dicts: ['mes_mainten_type','sys_yes_no'],\n  data() {\n    return {\n      //自动生成编码\n      autoGenFlag:false,\n      optType: undefined,\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 工装夹具类型表格数据\n      tooltypeList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        toolTypeCode: null,\n        toolTypeName: null,\n        codeFlag: null,\n        maintenType: null,\n        maintenPeriod: null,\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        toolTypeCode: [\n          { required: true, message: \"类型编码不能为空\", trigger: \"blur\" }\n        ],\n        toolTypeName: [\n          { required: true, message: \"类型名称不能为空\", trigger: \"blur\" }\n        ],\n        codeFlag: [\n          { required: true, message: \"是否启用不能为空\", trigger: \"blur\" }\n        ],\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询工装夹具类型列表 */\n    getList() {\n      this.loading = true;\n      listTooltype(this.queryParams).then(response => {\n        this.tooltypeList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        toolTypeId: null,\n        toolTypeCode: null,\n        toolTypeName: null,\n        codeFlag: 'Y',\n        maintenType: null,\n        maintenPeriod: null,\n        remark: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null\n      };\n      this.autoGenFlag = false;\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.toolTypeId)\n      this.single = selection.length!==1\n      this.multiple = !selection.length\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加工装夹具类型\";\n      this.optType = \"add\";\n    },\n    // 查询明细按钮操作\n    handleView(row){\n      this.reset();\n      const toolTypeId = row.toolTypeId || this.ids;\n      getTooltype(toolTypeId).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.title = \"查看类型信息\";\n        this.optType = \"view\";\n      });\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const toolTypeId = row.toolTypeId || this.ids\n      getTooltype(toolTypeId).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.title = \"修改工装夹具类型\";\n        this.optType = \"edit\";\n      });\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.toolTypeId != null) {\n            updateTooltype(this.form).then(response => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            addTooltype(this.form).then(response => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const toolTypeIds = row.toolTypeId || this.ids;\n      this.$modal.confirm('是否确认删除工装夹具类型编号为\"' + toolTypeIds + '\"的数据项？').then(function() {\n        return delTooltype(toolTypeIds);\n      }).then(() => {\n        this.getList();\n        this.$modal.msgSuccess(\"删除成功\");\n      }).catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      this.download('mes/tm/tooltype/export', {\n        ...this.queryParams\n      }, `tooltype_${new Date().getTime()}.xlsx`)\n    },\n    //自动生成编码\n    handleAutoGenChange(autoGenFlag){\n      if(autoGenFlag){\n        genCode('TOOL_TYPE_CODE').then(response =>{\n          this.form.toolTypeCode = response;\n        });\n      }else{\n        this.form.toolTypeCode = null;\n      }\n    }\n  }\n};\n</script>\n"]}]}