{"remainingRequest":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\babel-loader\\lib\\index.js!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\utils\\dict\\Dict.js","dependencies":[{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\utils\\dict\\Dict.js","mtime":1665505269000},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\babel.config.js","mtime":1665505269000},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662432868786},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1662432871518},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\eslint-loader\\index.js","mtime":1662432869370}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJEOi9yZXNvdXJjZS9lY2xpcHNlLXdvcmtzcGFjZS9rdGctbWVzLW1hc3Rlci9rdGctbWVzLXVpLW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQuanMiKS5kZWZhdWx0OwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLm1heC1zYWZlLWludGVnZXIuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiKTsKCnZhciBfdG9Db25zdW1hYmxlQXJyYXkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJEOi9yZXNvdXJjZS9lY2xpcHNlLXdvcmtzcGFjZS9rdGctbWVzLW1hc3Rlci9rdGctbWVzLXVpLW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90b0NvbnN1bWFibGVBcnJheS5qcyIpKTsKCnZhciBfY2xhc3NDYWxsQ2hlY2syID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJEOi9yZXNvdXJjZS9lY2xpcHNlLXdvcmtzcGFjZS9rdGctbWVzLW1hc3Rlci9rdGctbWVzLXVpLW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcyIpKTsKCnZhciBfY3JlYXRlQ2xhc3MyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJEOi9yZXNvdXJjZS9lY2xpcHNlLXdvcmtzcGFjZS9rdGctbWVzLW1hc3Rlci9rdGctbWVzLXVpLW1hc3Rlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzcy5qcyIpKTsKCnZhciBfdnVlID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKCJ2dWUiKSk7Cgp2YXIgX3J1b3lpID0gcmVxdWlyZSgiQC91dGlscy9ydW95aSIpOwoKdmFyIF9EaWN0TWV0YSA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiLi9EaWN0TWV0YSIpKTsKCnZhciBfRGljdERhdGEgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIi4vRGljdERhdGEiKSk7Cgp2YXIgREVGQVVMVF9ESUNUX09QVElPTlMgPSB7CiAgdHlwZXM6IFtdCn07Ci8qKgogKiBAY2xhc3NkZXNjIOWtl+WFuAogKiBAcHJvcGVydHkge09iamVjdH0gbGFiZWwg5qCH562+5a+56LGh77yM5YaF6YOo5bGe5oCn5ZCN5Li65a2X5YW457G75Z6L5ZCN56ewCiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBkaWN0IOWtl+auteaVsOe7hO+8jOWGhemDqOWxnuaAp+WQjeS4uuWtl+WFuOexu+Wei+WQjeensAogKiBAcHJvcGVydHkge0FycmF5LjxEaWN0TWV0YT59IF9kaWN0TWV0YXMg5a2X5YW45YWD5pWw5o2u5pWw57uECiAqLwoKdmFyIERpY3QgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIERpY3QoKSB7CiAgICAoMCwgX2NsYXNzQ2FsbENoZWNrMi5kZWZhdWx0KSh0aGlzLCBEaWN0KTsKICAgIHRoaXMub3duZXIgPSBudWxsOwogICAgdGhpcy5sYWJlbCA9IHt9OwogICAgdGhpcy50eXBlID0ge307CiAgfQoKICAoMCwgX2NyZWF0ZUNsYXNzMi5kZWZhdWx0KShEaWN0LCBbewogICAga2V5OiAiaW5pdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5pdChvcHRpb25zKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAob3B0aW9ucyBpbnN0YW5jZW9mIEFycmF5KSB7CiAgICAgICAgb3B0aW9ucyA9IHsKICAgICAgICAgIHR5cGVzOiBvcHRpb25zCiAgICAgICAgfTsKICAgICAgfQoKICAgICAgdmFyIG9wdHMgPSAoMCwgX3J1b3lpLm1lcmdlUmVjdXJzaXZlKShERUZBVUxUX0RJQ1RfT1BUSU9OUywgb3B0aW9ucyk7CgogICAgICBpZiAob3B0cy50eXBlcyA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCduZWVkIGRpY3QgdHlwZXMnKTsKICAgICAgfQoKICAgICAgdmFyIHBzID0gW107CiAgICAgIHRoaXMuX2RpY3RNZXRhcyA9IG9wdHMudHlwZXMubWFwKGZ1bmN0aW9uICh0KSB7CiAgICAgICAgcmV0dXJuIF9EaWN0TWV0YS5kZWZhdWx0LnBhcnNlKHQpOwogICAgICB9KTsKCiAgICAgIHRoaXMuX2RpY3RNZXRhcy5mb3JFYWNoKGZ1bmN0aW9uIChkaWN0TWV0YSkgewogICAgICAgIHZhciB0eXBlID0gZGljdE1ldGEudHlwZTsKCiAgICAgICAgX3Z1ZS5kZWZhdWx0LnNldChfdGhpcy5sYWJlbCwgdHlwZSwge30pOwoKICAgICAgICBfdnVlLmRlZmF1bHQuc2V0KF90aGlzLnR5cGUsIHR5cGUsIFtdKTsKCiAgICAgICAgaWYgKGRpY3RNZXRhLmxhenkpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHBzLnB1c2gobG9hZERpY3QoX3RoaXMsIGRpY3RNZXRhKSk7CiAgICAgIH0pOwoKICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHBzKTsKICAgIH0KICAgIC8qKgogICAgICog6YeN5paw5Yqg6L295a2X5YW4CiAgICAgKiBAcGFyYW0ge1N0cmluZ30gdHlwZSDlrZflhbjnsbvlnosKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJyZWxvYWREaWN0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWxvYWREaWN0KHR5cGUpIHsKICAgICAgdmFyIGRpY3RNZXRhID0gdGhpcy5fZGljdE1ldGFzLmZpbmQoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gZS50eXBlID09PSB0eXBlOwogICAgICB9KTsKCiAgICAgIGlmIChkaWN0TWV0YSA9PT0gdW5kZWZpbmVkKSB7CiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCJ0aGUgZGljdCBtZXRhIG9mICIuY29uY2F0KHR5cGUsICIgd2FzIG5vdCBmb3VuZCIpKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGxvYWREaWN0KHRoaXMsIGRpY3RNZXRhKTsKICAgIH0KICB9XSk7CiAgcmV0dXJuIERpY3Q7Cn0oKTsKLyoqCiAqIOWKoOi9veWtl+WFuAogKiBAcGFyYW0ge0RpY3R9IGRpY3Qg5a2X5YW4CiAqIEBwYXJhbSB7RGljdE1ldGF9IGRpY3RNZXRhIOWtl+WFuOWFg+aVsOaNrgogKiBAcmV0dXJucyB7UHJvbWlzZX0KICovCgoKZXhwb3J0cy5kZWZhdWx0ID0gRGljdDsKCmZ1bmN0aW9uIGxvYWREaWN0KGRpY3QsIGRpY3RNZXRhKSB7CiAgcmV0dXJuIGRpY3RNZXRhLnJlcXVlc3QoZGljdE1ldGEpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICB2YXIgX2RpY3QkdHlwZSR0eXBlOwoKICAgIHZhciB0eXBlID0gZGljdE1ldGEudHlwZTsKICAgIHZhciBkaWN0cyA9IGRpY3RNZXRhLnJlc3BvbnNlQ29udmVydGVyKHJlc3BvbnNlLCBkaWN0TWV0YSk7CgogICAgaWYgKCEoZGljdHMgaW5zdGFuY2VvZiBBcnJheSkpIHsKICAgICAgY29uc29sZS5lcnJvcigndGhlIHJldHVybiBvZiByZXNwb25zZUNvbnZlcnRlciBtdXN0IGJlIEFycmF5LjxEaWN0RGF0YT4nKTsKICAgICAgZGljdHMgPSBbXTsKICAgIH0gZWxzZSBpZiAoZGljdHMuZmlsdGVyKGZ1bmN0aW9uIChkKSB7CiAgICAgIHJldHVybiBkIGluc3RhbmNlb2YgX0RpY3REYXRhLmRlZmF1bHQ7CiAgICB9KS5sZW5ndGggIT09IGRpY3RzLmxlbmd0aCkgewogICAgICBjb25zb2xlLmVycm9yKCd0aGUgdHlwZSBvZiBlbGVtZW50cyBpbiBkaWN0cyBtdXN0IGJlIERpY3REYXRhJyk7CiAgICAgIGRpY3RzID0gW107CiAgICB9CgogICAgKF9kaWN0JHR5cGUkdHlwZSA9IGRpY3QudHlwZVt0eXBlXSkuc3BsaWNlLmFwcGx5KF9kaWN0JHR5cGUkdHlwZSwgWzAsIE51bWJlci5NQVhfU0FGRV9JTlRFR0VSXS5jb25jYXQoKDAsIF90b0NvbnN1bWFibGVBcnJheTIuZGVmYXVsdCkoZGljdHMpKSk7CgogICAgZGljdHMuZm9yRWFjaChmdW5jdGlvbiAoZCkgewogICAgICBfdnVlLmRlZmF1bHQuc2V0KGRpY3QubGFiZWxbdHlwZV0sIGQudmFsdWUsIGQubGFiZWwpOwogICAgfSk7CiAgICByZXR1cm4gZGljdHM7CiAgfSk7Cn0="},{"version":3,"names":["DEFAULT_DICT_OPTIONS","types","Dict","owner","label","type","options","Array","opts","mergeRecursive","undefined","Error","ps","_dictMetas","map","t","DictMeta","parse","forEach","dictMeta","Vue","set","lazy","push","loadDict","Promise","all","find","e","reject","dict","request","then","response","dicts","responseConverter","console","error","filter","d","DictData","length","splice","Number","MAX_SAFE_INTEGER","value"],"sources":["D:/resource/eclipse-workspace/ktg-mes-master/ktg-mes-ui-master/src/utils/dict/Dict.js"],"sourcesContent":["import Vue from 'vue'\nimport { mergeRecursive } from \"@/utils/ruoyi\";\nimport DictMeta from './DictMeta'\nimport DictData from './DictData'\n\nconst DEFAULT_DICT_OPTIONS = {\n  types: [],\n}\n\n/**\n * @classdesc 字典\n * @property {Object} label 标签对象，内部属性名为字典类型名称\n * @property {Object} dict 字段数组，内部属性名为字典类型名称\n * @property {Array.<DictMeta>} _dictMetas 字典元数据数组\n */\nexport default class Dict {\n  constructor() {\n    this.owner = null\n    this.label = {}\n    this.type = {}\n  }\n\n  init(options) {\n    if (options instanceof Array) {\n      options = { types: options }\n    }\n    const opts = mergeRecursive(DEFAULT_DICT_OPTIONS, options)\n    if (opts.types === undefined) {\n      throw new Error('need dict types')\n    }\n    const ps = []\n    this._dictMetas = opts.types.map(t => DictMeta.parse(t))\n    this._dictMetas.forEach(dictMeta => {\n      const type = dictMeta.type\n      Vue.set(this.label, type, {})\n      Vue.set(this.type, type, [])\n      if (dictMeta.lazy) {\n        return\n      }\n      ps.push(loadDict(this, dictMeta))\n    })\n    return Promise.all(ps)\n  }\n\n  /**\n   * 重新加载字典\n   * @param {String} type 字典类型\n   */\n  reloadDict(type) {\n    const dictMeta = this._dictMetas.find(e => e.type === type)\n    if (dictMeta === undefined) {\n      return Promise.reject(`the dict meta of ${type} was not found`)\n    }\n    return loadDict(this, dictMeta)\n  }\n}\n\n/**\n * 加载字典\n * @param {Dict} dict 字典\n * @param {DictMeta} dictMeta 字典元数据\n * @returns {Promise}\n */\nfunction loadDict(dict, dictMeta) {\n  return dictMeta.request(dictMeta)\n    .then(response => {\n      const type = dictMeta.type\n      let dicts = dictMeta.responseConverter(response, dictMeta)\n      if (!(dicts instanceof Array)) {\n        console.error('the return of responseConverter must be Array.<DictData>')\n        dicts = []\n      } else if (dicts.filter(d => d instanceof DictData).length !== dicts.length) {\n        console.error('the type of elements in dicts must be DictData')\n        dicts = []\n      }\n      dict.type[type].splice(0, Number.MAX_SAFE_INTEGER, ...dicts)\n      dicts.forEach(d => {\n        Vue.set(dict.label[type], d.value, d.label)\n      })\n      return dicts\n    })\n}\n"],"mappings":"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"}]}