{"remainingRequest":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\babel-loader\\lib\\index.js!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\views\\mes\\qc\\defectrecord\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\views\\mes\\qc\\defectrecord\\index.vue","mtime":1662109326000},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\babel.config.js","mtime":1662109326000},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662432868786},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1662432871518},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662432868786},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1662432874590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiKTsKCnZhciBfZGVmZWN0cmVjb3JkID0gcmVxdWlyZSgiQC9hcGkvbWVzL3FjL2RlZmVjdHJlY29yZCIpOwoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KdmFyIF9kZWZhdWx0ID0gewogIG5hbWU6ICJEZWZlY3RyZWNvcmQiLAogIGRpY3RzOiBbJ21lc19kZWZlY3RfbGV2ZWwnXSwKICBwcm9wczogewogICAgcWNJZDogbnVsbCwKICAgIHFjVHlwZTogbnVsbCwKICAgIGxpbmVJZDogbnVsbCwKICAgIG9wdFR5cGU6IG51bGwKICB9LAogIHdhdGNoOiB7CiAgICBxY0lkOiBmdW5jdGlvbiBxY0lkKCkgewogICAgICB0aGlzLnF1ZXJ5UGFyYW1zLnFjSWQgPSB0aGlzLnFjSWQ7CiAgICB9LAogICAgcWNUeXBlOiBmdW5jdGlvbiBxY1R5cGUoKSB7CiAgICAgIHRoaXMucXVlcnlQYXJhbXMucWNUeXBlID0gdGhpcy5xY1R5cGU7CiAgICB9LAogICAgbGluZUlkOiBmdW5jdGlvbiBsaW5lSWQoKSB7CiAgICAgIHRoaXMucXVlcnlQYXJhbXMubGluZUlkID0gdGhpcy5saW5lSWQ7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd0ZsYWc6IGZhbHNlLAogICAgICAvLyDpga7nvanlsYIKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgLy8g6YCJ5Lit5pWw57uECiAgICAgIGlkczogW10sCiAgICAgIC8vIOmdnuWNleS4quemgeeUqAogICAgICBzaW5nbGU6IHRydWUsCiAgICAgIC8vIOmdnuWkmuS4quemgeeUqAogICAgICBtdWx0aXBsZTogdHJ1ZSwKICAgICAgLy8g5pi+56S65pCc57Si5p2h5Lu2CiAgICAgIHNob3dTZWFyY2g6IHRydWUsCiAgICAgIC8vIOaAu+adoeaVsAogICAgICB0b3RhbDogMCwKICAgICAgLy8g5qOA6aqM5Y2V57y66Zm36K6w5b2V6KGo5qC85pWw5o2uCiAgICAgIGRlZmVjdHJlY29yZExpc3Q6IFtdLAogICAgICAvLyDlvLnlh7rlsYLmoIfpopgKICAgICAgdGl0bGU6ICIiLAogICAgICAvLyDmmK/lkKbmmL7npLrlvLnlh7rlsYIKICAgICAgb3BlbjogZmFsc2UsCiAgICAgIC8vIOafpeivouWPguaVsAogICAgICBxdWVyeVBhcmFtczogewogICAgICAgIHBhZ2VOdW06IDEsCiAgICAgICAgcGFnZVNpemU6IDEwLAogICAgICAgIHFjVHlwZTogdGhpcy5xY1R5cGUsCiAgICAgICAgcWNJZDogdGhpcy5xY0lkLAogICAgICAgIGxpbmVJZDogdGhpcy5saW5lSWQsCiAgICAgICAgZGVmZWN0TmFtZTogbnVsbCwKICAgICAgICBkZWZlY3RMZXZlbDogbnVsbCwKICAgICAgICBkZWZlY3RRdWFudGl0eTogbnVsbAogICAgICB9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0TGlzdCgpOwogIH0sCiAgbWV0aG9kczogewogICAgLyoqIOafpeivouajgOmqjOWNlee8uumZt+iusOW9leWIl+ihqCAqLwogICAgZ2V0TGlzdDogZnVuY3Rpb24gZ2V0TGlzdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7CiAgICAgICgwLCBfZGVmZWN0cmVjb3JkLmxpc3REZWZlY3RyZWNvcmQpKHRoaXMucXVlcnlQYXJhbXMpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMuZGVmZWN0cmVjb3JkTGlzdCA9IHJlc3BvbnNlLnJvd3M7CiAgICAgICAgX3RoaXMudG90YWwgPSByZXNwb25zZS50b3RhbDsKICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKiog5paw5aKe5oyJ6ZKu5pON5L2cICovCiAgICBoYW5kbGVBZGQ6IGZ1bmN0aW9uIGhhbmRsZUFkZCgpIHsKICAgICAgZGVidWdnZXI7CiAgICAgIHZhciByb3cgPSB7CiAgICAgICAgcmVjb3JkSWQ6IG51bGwsCiAgICAgICAgcWNJZDogdGhpcy5xY0lkLAogICAgICAgIHFjVHlwZTogdGhpcy5xY1R5cGUsCiAgICAgICAgbGluZUlkOiB0aGlzLmxpbmVJZCwKICAgICAgICBkZWZlY3ROYW1lOiBudWxsLAogICAgICAgIGRlZmVjdExldmVsOiBudWxsLAogICAgICAgIGRlZmVjdFF1YW50aXR5OiBudWxsLAogICAgICAgIGZsYWc6ICdhZGQnLAogICAgICAgIHJlbWFyazogbnVsbAogICAgICB9OwogICAgICB0aGlzLmRlZmVjdHJlY29yZExpc3QudW5zaGlmdChyb3cpOwogICAgfSwKCiAgICAvKiog6YCJ5oup5bi46KeB57y66Zm3ICovCiAgICBoYW5kbGVVcGRhdGU6IGZ1bmN0aW9uIGhhbmRsZVVwZGF0ZShyb3cpIHt9LAoKICAgIC8qKiDmj5DkuqTmjInpkq4gKi8KICAgIGNvbmZpcm06IGZ1bmN0aW9uIGNvbmZpcm0oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuZGVmZWN0cmVjb3JkTGlzdC5sZW5ndGggIT0gMCkgewogICAgICAgICgwLCBfZGVmZWN0cmVjb3JkLnVwZGF0ZURlZmVjdHJlY29yZCkodGhpcy5kZWZlY3RyZWNvcmRMaXN0KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIF90aGlzMi4kbW9kYWwubXNnU3VjY2VzcyhyZXMubXNnKTsKCiAgICAgICAgICBpZiAocmVzLmNvZGUgPT09IDIwMCkgewogICAgICAgICAgICBfdGhpczIuc2hvd0ZsYWcgPSBmYWxzZTsKCiAgICAgICAgICAgIF90aGlzMi5nZXRMaXN0KCk7CgogICAgICAgICAgICBfdGhpczIuJHBhcmVudC5nZXRMaXN0KCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCgogICAgLyoqIOWIoOmZpOaMiemSruaTjeS9nCAqLwogICAgaGFuZGxlRGVsZXRlOiBmdW5jdGlvbiBoYW5kbGVEZWxldGUoaW5kZXgsIHJvdykgewogICAgICB2YXIgcmVjb3JkSWRzID0gcm93LnJlY29yZElkIHx8IHRoaXMuaWRzOwogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIHRoaXMuJG1vZGFsLmNvbmZpcm0oJ+aYr+WQpuehruiupOWIoOmZpOe8uumZt+iusOW9le+8nycpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHRoYXQuZGVmZWN0cmVjb3JkTGlzdC5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpLCBhcnIpIHsKICAgICAgICAgIGRlYnVnZ2VyOwoKICAgICAgICAgIGlmIChpID09IGluZGV4KSB7CiAgICAgICAgICAgIGlmICh0aGF0LmRlZmVjdHJlY29yZExpc3RbaW5kZXhdLmZsYWcgPT0gJ2FkZCcpIHsKICAgICAgICAgICAgICAvL+WmguaenOaYr+WImuaWsOWinueahOWImeebtOaOpeWIoOmZpAogICAgICAgICAgICAgIHRoYXQuZGVmZWN0cmVjb3JkTGlzdC5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8v5aaC5p6c5piv5LuO5pWw5o2u5bqT5p+l6K+i55qE5YiZ5LuO5pWw5o2u5bqT5Yig6ZmkCiAgICAgICAgICAgICAgKDAsIF9kZWZlY3RyZWNvcmQuZGVsRGVmZWN0cmVjb3JkKShyZWNvcmRJZHMpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgICAgICAgdGhhdC5nZXRMaXN0KCk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHRoaXMuJHBhcmVudC5nZXRMaXN0KCk7CiAgICB9CiAgfQp9OwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"mappings":";;;;;;;;;;;;;AAsFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEA;EACAA,oBADA;EAEAC,2BAFA;EAGAC;IACAC,UADA;IAEAC,YAFA;IAGAC,YAHA;IAIAC;EAJA,CAHA;EASAC;IACAJ,IADA,kBACA;MACA;IACA,CAHA;IAIAC,MAJA,oBAIA;MACA;IACA,CANA;IAOAC,MAPA,oBAOA;MACA;IACA;EATA,CATA;EAoBAG,IApBA,kBAoBA;IACA;MACAC,eADA;MAEA;MACAC,aAHA;MAIA;MACAC,OALA;MAMA;MACAC,YAPA;MAQA;MACAC,cATA;MAUA;MACAC,gBAXA;MAYA;MACAC,QAbA;MAcA;MACAC,oBAfA;MAgBA;MACAC,SAjBA;MAkBA;MACAC,WAnBA;MAoBA;MACAC;QACAC,UADA;QAEAC,YAFA;QAGAjB,mBAHA;QAIAD,eAJA;QAKAE,mBALA;QAMAiB,gBANA;QAOAC,iBAPA;QAQAC;MARA;IArBA;EAgCA,CArDA;EAsDAC,OAtDA,qBAsDA;IACA;EACA,CAxDA;EAyDAC;IACA;IACAC,OAFA,qBAEA;MAAA;;MACA;MACA;QACA;QACA;QACA;MACA,CAJA;IAKA,CATA;;IAWA;IACAC,SAZA,uBAYA;MACA;MACA;QACAC,cADA;QAEA1B,eAFA;QAGAC,mBAHA;QAIAC,mBAJA;QAKAiB,gBALA;QAMAC,iBANA;QAOAC,oBAPA;QAQAM,WARA;QASAC;MATA;MAWA;IACA,CA1BA;;IA2BA;IACAC,YA5BA,wBA4BAC,GA5BA,EA4BA,CAEA,CA9BA;;IA+BA;IACAC,OAhCA,qBAgCA;MAAA;;MACA;QACA;UACA;;UACA;YACA;;YACA;;YACA;UACA;QACA,CAPA;MAQA;IACA,CA3CA;;IA4CA;IACAC,YA7CA,wBA6CAC,KA7CA,EA6CAH,GA7CA,EA6CA;MACA;MACA;MACA;QACAI;UACA;;UACA;YACA;cACA;cACAA;YACA,CAHA,MAGA;cACA;cACA;gBACAA;cACA,CAFA;YAGA;UACA;QACA,CAbA;MAcA,CAfA;MAgBA;IACA;EAjEA;AAzDA,C","names":["name","dicts","props","qcId","qcType","lineId","optType","watch","data","showFlag","loading","ids","single","multiple","showSearch","total","defectrecordList","title","open","queryParams","pageNum","pageSize","defectName","defectLevel","defectQuantity","created","methods","getList","handleAdd","recordId","flag","remark","handleUpdate","row","confirm","handleDelete","index","that"],"sourceRoot":"src/views/mes/qc/defectrecord","sources":["index.vue"],"sourcesContent":["<template>\n  <el-dialog title=\"缺陷记录\"\n    v-if=\"showFlag\"\n    :visible.sync=\"showFlag\"\n    :modal= false\n    width=\"80%\"\n    center\n  >\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          plain\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['mes:qc:defectrecord:add']\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          plain\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['mes:qc:defectrecord:edit']\"\n        >常见缺陷</el-button>\n      </el-col>      \n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n    </el-row>\n\n    <el-table v-loading=\"loading\" :data=\"defectrecordList\">\n      <el-table-column label=\"缺陷描述\" width=\"400px\" align=\"center\" prop=\"defectName\" >\n            <template slot-scope=\"scope\">\n              <el-input type=\"textarea\" v-model=\"scope.row.defectName\"></el-input>\n            </template>\n      </el-table-column>\n      <el-table-column label=\"缺陷等级\" align=\"center\" prop=\"defectLevel\">\n        <template slot-scope=\"scope\">\n            <el-select v-model=\"scope.row.defectLevel\">\n                <el-option\n                    v-for=\"dict in dict.type.mes_defect_level\"\n                    :key=\"dict.value\"\n                    :label=\"dict.label\"\n                    :value=\"dict.value\"\n                />                \n            </el-select>          \n        </template>\n      </el-table-column>\n      <el-table-column label=\"缺陷数量\" align=\"center\" prop=\"defectQuantity\" >\n        <template slot-scope=\"scope\">\n            <el-input-number :min=\"1\" v-model=\"scope.row.defectQuantity\" />\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            v-if=\"optType !='view'\"\n            @click=\"handleDelete(scope.$index, scope.row)\"\n            v-hasPermi=\"['mes:qc:defectrecord:remove']\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    \n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n    <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"cancel\" v-if=\"optType =='view'\">返回</el-button>\n        <el-button type=\"primary\" v-hasPermi=\"['mes:qc:defectrecord:update']\" v-else @click=\"confirm\">确 定</el-button>\n        <el-button @click=\"showFlag=false\">取 消</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { listDefectrecord, getDefectrecord, delDefectrecord, addDefectrecord, updateDefectrecord } from \"@/api/mes/qc/defectrecord\";\n\nexport default {\n  name: \"Defectrecord\",\n  dicts: ['mes_defect_level'],\n  props: {\n    qcId: null,\n    qcType: null,\n    lineId:null,\n    optType:null\n  },\n  watch :{\n      qcId(){\n        this.queryParams.qcId = this.qcId;        \n      },\n      qcType(){\n        this.queryParams.qcType = this.qcType;\n      },\n      lineId(){\n        this.queryParams.lineId = this.lineId;\n      }      \n  },\n  data() {\n    return {\n      showFlag: false,\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 检验单缺陷记录表格数据\n      defectrecordList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        qcType: this.qcType,\n        qcId: this.qcId,\n        lineId: this.lineId,\n        defectName: null,\n        defectLevel: null,\n        defectQuantity: null,\n      },\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询检验单缺陷记录列表 */\n    getList() {\n      this.loading = true;\n      listDefectrecord(this.queryParams).then(response => {\n        this.defectrecordList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n\n    /** 新增按钮操作 */\n    handleAdd() {\n      debugger;\n      var row = {\n            recordId: null,\n            qcId: this.qcId,\n            qcType: this.qcType,\n            lineId: this.lineId,\n            defectName: null,\n            defectLevel: null,\n            defectQuantity: null,\n            flag:'add',\n            remark: null\n        }\n        this.defectrecordList.unshift(row);\n    },\n    /** 选择常见缺陷 */\n    handleUpdate(row) {\n\n    },\n    /** 提交按钮 */\n    confirm() {\n      if(this.defectrecordList.length !=0){\n        updateDefectrecord(this.defectrecordList).then(res => {\n          this.$modal.msgSuccess(res.msg);\n          if (res.code === 200) {\n            this.showFlag = false;\n            this.getList();\n            this.$parent.getList();\n          }\n        });\n      }\n    },\n    /** 删除按钮操作 */\n    handleDelete(index,row) {\n        const recordIds = row.recordId || this.ids;\n        let that = this;\n        this.$modal.confirm('是否确认删除缺陷记录？').then(function() {\n            that.defectrecordList.forEach(function(item,i,arr){\n                debugger;\n                if(i == index){\n                  if(that.defectrecordList[index].flag=='add'){\n                    //如果是刚新增的则直接删除\n                    that.defectrecordList.splice(index,1);\n                  }else{\n                    //如果是从数据库查询的则从数据库删除\n                    delDefectrecord(recordIds).then(res=>{\n                      that.getList();\n                    });\n                  }                                      \n                }\n            })\n        });\n        this.$parent.getList();\n    }\n\n  }\n};\n</script>\n"]}]}