{"remainingRequest":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\views\\mes\\dv\\checkplan\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\src\\views\\mes\\dv\\checkplan\\index.vue","mtime":1665505269000},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662432868786},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1662432871518},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1662432868786},{"path":"D:\\resource\\eclipse-workspace\\ktg-mes-master\\ktg-mes-ui-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1662432874590}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/mes/dv/checkplan","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"queryParams\" ref=\"queryForm\" size=\"small\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\n      <el-form-item label=\"计划编号\" prop=\"planCode\">\n        <el-input\n          v-model=\"queryParams.planCode\"\n          placeholder=\"请输入计划编号\"\n          clearable\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"计划名称\" prop=\"planName\">\n        <el-input\n          v-model=\"queryParams.planName\"\n          placeholder=\"请输入计划名称\"\n          clearable\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"计划类型\" prop=\"planType\">\n        <el-select v-model=\"queryParams.planType\" placeholder=\"请选择类型\" clearable>\n          <el-option\n            v-for=\"dict in dict.type.dv_plan_type\"\n            :key=\"dict.value\"\n            :label=\"dict.label\"\n            :value=\"dict.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"状态\" prop=\"status\">\n        <el-select v-model=\"queryParams.status\" placeholder=\"请选择状态\" clearable>\n          <el-option\n            v-for=\"dict in dict.type.mes_order_status\"\n            :key=\"dict.value\"\n            :label=\"dict.label\"\n            :value=\"dict.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          plain\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['mes:dv:checkplan:add']\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          plain\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['mes:dv:checkplan:edit']\"\n        >修改</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          plain\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n          v-hasPermi=\"['mes:dv:checkplan:remove']\"\n        >删除</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"warning\"\n          plain\n          icon=\"el-icon-download\"\n          size=\"mini\"\n          @click=\"handleExport\"\n          v-hasPermi=\"['mes:dv:checkplan:export']\"\n        >导出</el-button>\n      </el-col>\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n    </el-row>\n\n    <el-table v-loading=\"loading\" :data=\"checkplanList\" @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"计划编码\" align=\"center\" prop=\"planCode\" >\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"text\"\n            @click=\"handleView(scope.row)\"\n            v-hasPermi=\"['mes:dv:checkplan:query']\"\n          >{{scope.row.planCode}}</el-button>\n        </template>\n      </el-table-column>      \n      <el-table-column label=\"计划名称\" align=\"center\" width=\"200px\" prop=\"planName\" />\n      <el-table-column label=\"计划类型\" align=\"center\" width=\"120px\" prop=\"planType\">\n        <template slot-scope=\"scope\">\n          <dict-tag :options=\"dict.type.dv_plan_type\" :value=\"scope.row.planType\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"开始日期\" align=\"center\" prop=\"startDate\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.startDate, '{y}-{m}-{d}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"结束日期\" align=\"center\" prop=\"endDate\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.endDate, '{y}-{m}-{d}') }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"频率\" align=\"center\" prop=\"cycleType\">        \n        <template slot-scope=\"scope\">\n          {{scope.row.cycleCount}}\n          <dict-tag :options=\"dict.type.mes_cycle_type\" :value=\"scope.row.cycleType\"/>\n        </template>\n      </el-table-column>      \n      <el-table-column label=\"状态\" align=\"center\" prop=\"status\">\n        <template slot-scope=\"scope\">\n          <dict-tag :options=\"dict.type.mes_order_status\" :value=\"scope.row.status\"/>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" width=\"130px\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"handleUpdate(scope.row)\"\n            v-if=\"scope.row.status =='PREPARE'\"\n            v-hasPermi=\"['mes:dv:checkplan:edit']\"\n          >修改</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n            v-if=\"scope.row.status =='PREPARE'\"\n            v-hasPermi=\"['mes:dv:checkplan:remove']\"\n          >删除</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleUpdate(scope.row)\"\n            v-if=\"scope.row.status =='FINISHED'\"\n            v-hasPermi=\"['mes:dv:checkplan:edit']\"\n          >停用</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    \n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改设备点检计划头对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"960px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\n        <el-row>\n          <el-col :span=\"8\">\n            <el-form-item label=\"计划编码\" prop=\"planCode\">\n              <el-input v-model=\"form.planCode\" placeholder=\"请输入计划编码\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"4\">\n            <el-form-item  label-width=\"80\">\n              <el-switch v-model=\"autoGenFlag\"\n                  active-color=\"#13ce66\"\n                  active-text=\"自动生成\"\n                  @change=\"handleAutoGenChange(autoGenFlag)\" v-if=\"optType != 'view'\">               \n              </el-switch>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"计划名称\" prop=\"planName\">\n              <el-input v-model=\"form.planName\" placeholder=\"请输入计划名称\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"12\">\n            <el-form-item label=\"计划类型\"  prop=\"planType\" >\n                <el-select v-model=\"form.planType\" placeholder=\"请选择计划类型\">\n                  <el-option\n                    v-for=\"dict in dict.type.dv_plan_type\"\n                    :key=\"dict.value\"\n                    :label=\"dict.label\"\n                    :value=\"dict.value\"\n                  ></el-option>\n                </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-form-item label=\"频率\" prop=\"cycleCount\">\n              <el-input-number :min=\"1\" :step=\"1\" v-model=\"form.cycleCount\" placeholder=\"请输入次数\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"4\" >\n            <el-form-item  prop=\"cycleType\" label-width=\"80\">\n                <el-select v-model=\"form.cycleType\" placeholder=\"请选择频率\">\n                  <el-option\n                    v-for=\"dict in dict.type.mes_cycle_type\"\n                    :key=\"dict.value\"\n                    :label=\"dict.label\"\n                    :value=\"dict.value\"\n                  ></el-option>\n                </el-select>\n              </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"8\">\n            <el-form-item label=\"开始日期\" prop=\"startDate\">\n              <el-date-picker clearable\n                v-model=\"form.startDate\"\n                type=\"date\"\n                value-format=\"yyyy-MM-dd\"\n                placeholder=\"请选择开始日期\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-form-item label=\"结束日期\" prop=\"endDate\">\n              <el-date-picker clearable\n                v-model=\"form.endDate\"\n                type=\"date\"\n                value-format=\"yyyy-MM-dd\"\n                placeholder=\"请选择结束日期\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"8\">\n            <el-form-item label=\"状态\" prop=\"status\">\n              <el-select v-model=\"form.status\" disabled>\n                <el-option\n                  v-for=\"dict in dict.type.mes_order_status\"\n                  :key=\"dict.value\"\n                  :label=\"dict.label\"\n                  :value=\"dict.value\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"备注\" prop=\"remark\">\n              <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <el-tabs type=\"border-card\" v-if=\"form.planId != null\">        \n        <el-tab-pane label=\"设备清单\"> \n          <Checkmachinery ref=\"machinerylist\" :optType=\"optType\" :planId=\"form.planId\" ></Checkmachinery>        \n        </el-tab-pane>\n        <el-tab-pane :label=\"form.planType=='CHECK'?'点检项目':'保养项目'\">\n          <Checksubject ref=\"subjectlist\" :optType=\"optType\" :planId=\"form.planId\" ></Checksubject>\n        </el-tab-pane>\n      </el-tabs>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"cancel\" v-if=\"optType =='view' || form.status !='PREPARE' \">返回</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\" v-if=\"form.status =='PREPARE' && optType !='view' \">保存</el-button>\n        <el-button type=\"success\" @click=\"handleFinish\" v-if=\"form.status =='PREPARE' && optType !='view'  && form.planId !=null\">启用</el-button>\n        <el-button type=\"success\" @click=\"handleDeFinish\" v-if=\"form.status =='FINISHED' && optType !='view'  && form.planId !=null\">停用</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listCheckplan, getCheckplan, delCheckplan, addCheckplan, updateCheckplan } from \"@/api/mes/dv/checkplan\";\nimport Checkmachinery from \"./machinery.vue\"\nimport Checksubject from \"./subject.vue\"\nimport {genCode} from \"@/api/system/autocode/rule\"\nexport default {\n  name: \"Checkplan\",\n  dicts: ['mes_cycle_type','mes_order_status','dv_plan_type'],\n  components:{Checkmachinery,Checksubject},\n  data() {\n    return {\n      autoGenFlag: false,\n      optType: null,\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 设备点检计划头表格数据\n      checkplanList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        planCode: null,\n        planName: null,\n        startDate: null,\n        endDate: null,        \n        cycleType: null,\n        cycleCount: null,\n        status: null\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        planCode: [\n          { required: true, message: \"计划编码不能为空\", trigger: \"blur\" }\n        ],\n        planName: [\n          { required: true, message: \"计划名称不能为空\", trigger: \"blur\" }\n        ],\n        planType:[\n          { required: true, message: \"计划类型不能为空\", trigger: \"blur\" }\n        ],\n        cycleType: [\n          { required: true, message: \"请选择点检频率\", trigger: \"blur\" }\n        ],\n        cycleCount: [\n          { required: true, message: \"请输入点检次数\", trigger: \"blur\" }\n        ],\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询设备点检计划头列表 */\n    getList() {\n      this.loading = true;\n      listCheckplan(this.queryParams).then(response => {\n        this.checkplanList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        planId: null,\n        planCode: null,\n        planName: null,\n        planType: null,\n        startDate: null,\n        endDate: null,\n        cycleType: null,\n        cycleCount: null,\n        status: 'PREPARE',\n        remark: null,\n        attr1: null,\n        attr2: null,\n        attr3: null,\n        attr4: null,\n        createBy: null,\n        createTime: null,\n        updateBy: null,\n        updateTime: null\n      };\n      this.autoGenFlag = false;\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.planId)\n      this.single = selection.length!==1\n      this.multiple = !selection.length\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = \"添加计划\";\n      this.optType = \"add\";\n    },\n    // 查询明细按钮操作\n    handleView(row){\n      this.reset();\n      const planId = row.planId || this.ids;\n      getCheckplan(planId).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.title = \"查看计划信息\";\n        this.optType = \"view\";\n      });\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const planId = row.planId || this.ids\n      getCheckplan(planId).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.title = \"修改计划\";\n        this.optType = \"edit\";\n      });\n    },\n    /** 提交按钮 */\n    submitForm() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.planId != null) {\n            updateCheckplan(this.form).then(response => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            addCheckplan(this.form).then(response => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    handleFinish(){\n      if(this.form.planId != null && this.form.status =='PREPARE'){\n        this.form.status='FINISHED';\n        updateCheckplan(this.form).then(response => {                \n                this.$modal.msgSuccess(\"已启用\");\n                this.open = false;\n                this.getList();\n        },err =>{\n          this.form.status='PREPARE';\n        });\n      }\n    },\n    handleDeFinish(){\n      if(this.form.planId != null && this.form.status =='FINISHED'){\n        this.form.status='PREPARE';\n        updateCheckplan(this.form).then(response => {                \n                this.$modal.msgSuccess(\"已停用\");\n                this.open = false;\n                this.getList();\n        },err =>{\n          this.form.status='FINISHED';\n        });\n      }\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const planIds = row.planId || this.ids;\n      this.$modal.confirm('是否确认删除计划编号为\"' + planIds + '\"的数据项？').then(function() {\n        return delCheckplan(planIds);\n      }).then(() => {\n        this.getList();\n        this.$modal.msgSuccess(\"删除成功\");\n      }).catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      this.download('dv/checkplan/export', {\n        ...this.queryParams\n      }, `checkplan_${new Date().getTime()}.xlsx`)\n    },\n    //自动生成编码\n    handleAutoGenChange(autoGenFlag){\n      if(autoGenFlag){\n        genCode('CHECKPLAN_CODE').then(response =>{\n          this.form.planCode = response;\n        });\n      }else{\n        this.form.planCode = null;\n      }\n    }\n  }\n};\n</script>\n"]}]}